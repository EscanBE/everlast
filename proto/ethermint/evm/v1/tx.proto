syntax = "proto3";
package ethermint.evm.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "ethermint/evm/v1/evm.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/EscanBE/evermint/v12/x/evm/types";

// Msg defines the x/evm Msg service.
service Msg {
  // EthereumTx defines a method submitting Ethereum transactions.
  rpc EthereumTx(MsgEthereumTx) returns (MsgEthereumTxResponse) {
    option (google.api.http).post = "/evmos/evm/v1/ethereum_tx";
  };
  // UpdateParams defined a governance operation for updating the x/evm module parameters.
  // The authority is hard-coded to the Cosmos SDK x/gov module account
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgEthereumTx encapsulates an Ethereum transaction as an SDK message.
message MsgEthereumTx {
  option (cosmos.msg.v1.signer) = "from";
  option (gogoproto.goproto_getters) = false;

  // DEPRECATED: data is inner transaction data of the Ethereum transaction
  reserved 1;
  reserved "data";
  // DEPRECATED: size is the encoded storage size of the transaction (DEPRECATED)
  reserved 2;
  reserved "size";
  // DEPRECATED: hash of the transaction in hex format
  reserved 3;
  reserved "hash";
  // from is the ethereum signer address in bech32 format. This address value is checked
  // against the address derived from the signature (V, R, S) using the
  // secp256k1 elliptic curve
  string from = 4;

  // marshalled_tx is the binary of the Ethereum tx.
  bytes marshalled_tx = 5;
}

// ExtensionOptionsEthereumTx is an extension option for ethereum transactions
message ExtensionOptionsEthereumTx {
  option (gogoproto.goproto_getters) = false;
}

// MsgEthereumTxResponse defines the Msg/EthereumTx response type.
message MsgEthereumTxResponse {
  option (gogoproto.goproto_getters) = false;

  // hash of the ethereum transaction in hex format.
  // This hash differs from the CometBFT sha256 hash of the transaction bytes.
  // See https://github.com/tendermint/tendermint/issues/6539 for reference
  string hash = 1;
  // DEPRECATED: logs contains the transaction hash and the proto-compatible ethereum logs.
  reserved 2;
  reserved "logs";
  // ret is the returned data from evm function (result or data supplied with revert
  // opcode)
  bytes ret = 3;
  // vm_error is the error returned by vm execution
  string vm_error = 4;
  // gas_used specifies how much gas was consumed by the transaction
  uint64 gas_used = 5;
  // marshalled_receipt is the marshalled version of Ethereum tx receipt
  bytes marshalled_receipt = 6;
}

// MsgUpdateParams defines a Msg for updating the x/evm module parameters.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/evm parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
